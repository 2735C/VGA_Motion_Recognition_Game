`timescale 1ns / 1ps

module tb_zybo_hdmi_test;

    // Clock and reset
    logic clk;
    logic reset;

    // OV7670 camera signals
    logic        ov7670_pclk;
    logic        ov7670_href;
    logic        ov7670_vsync;
    logic [7:0]  ov7670_data;

    // HDMI outputs (differential pairs)
    logic hdmi_clk_p, hdmi_clk_n;
    logic r_port_p, r_port_n;
    logic g_port_p, g_port_n;
    logic b_port_p, b_port_n;

    // DUT instance
    VGA_Camera_Display dut (
        .clk          (clk),
        .reset        (reset),
        .ov7670_xclk  (),             // generated by DUT
        .ov7670_pclk  (ov7670_pclk),
        .ov7670_href  (ov7670_href),
        .ov7670_vsync (ov7670_vsync),
        .ov7670_data  (ov7670_data),
        .hdmi_clk_p   (hdmi_clk_p),
        .hdmi_clk_n   (hdmi_clk_n),
        .r_port_p     (r_port_p),
        .r_port_n     (r_port_n),
        .g_port_p     (g_port_p),
        .g_port_n     (g_port_n),
        .b_port_p     (b_port_p),
        .b_port_n     (b_port_n)
    );

    // Generate main clk (100 MHz)
    initial clk = 0;
    always #5 clk = ~clk;

    // Generate OV7670 pixel clock (24 MHz for example â†’ 20.83 ns period)
    initial ov7670_pclk = 0;
    always #20.83 ov7670_pclk = ~ov7670_pclk;

    // Reset sequence
    initial begin
        reset = 1;
        ov7670_href  = 0;
        ov7670_vsync = 0;
        ov7670_data  = 8'h00;

        #100;
        reset = 0;

        // Simulate one frame with simple data pattern
        fork
            simulate_camera();
        join
    end

    // Simple camera stimulus
    task simulate_camera;
        int x, y;
        begin
            // VSYNC high for frame start
            ov7670_vsync = 1;
            repeat (5) @(posedge ov7670_pclk);
            ov7670_vsync = 0;

            // Generate QVGA 320x240 image pattern
            for (y = 0; y < 240; y++) begin
                ov7670_href = 1;
                for (x = 0; x < 320; x++) begin
                    ov7670_data = (x + y) % 256; // simple gradient pattern
                    @(posedge ov7670_pclk);
                end
                ov7670_href = 0;
                repeat (20) @(posedge ov7670_pclk); // porch gap
            end

            // End of frame (VSYNC pulse)
            ov7670_vsync = 1;
            repeat (5) @(posedge ov7670_pclk);
            ov7670_vsync = 0;

            $display("Frame simulated!");
            #1000 $finish;
        end
    endtask

endmodule
